var MOTDate = ""; var DLDate = ""; var RequestId = ""; sap.ui.define(["sap/ui/core/mvc/Controller", "sap/ui/model/json/JSONModel", "sap/ui/model/BindingMode", "sap/ui/core/message/Message", "sap/ui/core/MessageType", "sap/ui/core/ValueState", "sap/m/MessageToast", "sap/m/MessageBox", "sap/ui/core/library", "sap/ui/model/Filter", "sap/ui/core/Fragment", "sap/ui/model/FilterOperator"], function (e, t, i, o, a, s, r, l, n, d, c, u) {
    "use strict"; return e.extend("ZFLEET_DELIVERY_TRUCK_REQ.ZFLEET_DELIVERY_TRUCK_REQ.controller.View1", {
        onInit: function () { var e, t; t = this.getView(); e = sap.ui.getCore().getMessageManager(); t.setModel(e.getMessageModel(), "message"); var i = []; this.filenameLicense = {}; this.filetypeLicense = {}; i = [{ No: "1", DescAr: "عدم الاحتفاظ بطاقة التشغيل داخل المركبة", DescEn: "Operation card is not available in the truck.", Ownership: "Driver", Amount: "2000" }, { No: "2", DescAr: "سير المركبة بلا لوحة امامية", DescEn: "Driving a vehicle without front plates", Ownership: "Driver", Amount: "1000" }, { No: "3", DescAr: "سير المركبة بلا لوحة خلفية أو بلا لوحات", DescEn: "Driving a vehicle without front plates", Ownership: "Driver", Amount: "1000" }, { No: "4", DescAr: "قيادة المركبة بلوحات غير واضحة", DescEn: "Driving a vehicle with unclear or damaged license plates", Ownership: "Driver", Amount: "1000" }, { No: "5", DescAr: "عدم الالتزام بحدود المسارات", DescEn: "Non-compliance with the limits of selected tracks on the road", Ownership: "Driver", Amount: "300" }, { No: "6", DescAr: "وقوف المركبة في اماكن غير مخصصة للوقوف", DescEn: "Wrong Parking", Ownership: "Driver", Amount: "100" }, { No: "7", DescAr: "استخدام السائق بيده أي جهاز محمول اثناء سير المركبة -رصد آلي", DescEn: "Using a cell phone or other electronic device in hand", Ownership: "Driver", Amount: "500" }, { No: "8", DescAr: "عدم ربط حزام الامان - رصد آلي", DescEn: "Seat belt not applied", Ownership: "Driver", Amount: "150" }, { No: "9", DescAr: "تجاوز السرعة المحددة باكثر من 10 الى 20 كلم/س  - رصد آلي", DescEn: "Overspeeding 10 to 20 Kmph", Ownership: "Driver", Amount: "150" }, { No: "10", DescAr: "تجاوز السرعة المحددة باكثر من 20 الى 30 كلم/س  - رصد آلي", DescEn: "Overspeeding 20 to 30 Kmph", Ownership: "Driver", Amount: "300" }, { No: "11", DescAr: "تجاوز اشارة المرور الضوئية اثناء الضوء الاحمر - رصد آلي", DescEn: "Passing the red signal light", Ownership: "Driver", Amount: "3000" }, { No: "12", DescAr: "عدم الالتزام بحدود المسارات المحددة على الطريق - رصد آلي", DescEn: "Not following the right tracks", Ownership: "Driver", Amount: "300" }, { No: "13", DescAr: "عدم وجود انارة جانبية أو عواكس  أو سواتر للشاحنات والمقطورات", DescEn: "The absence of side lighting or reflectors for trailers", Ownership: "Driver", Amount: "1000" }, { No: "14", DescAr: "مخالفة عدم تسليم اصل رخصة سير", DescEn: "Original Istimarah is not available in the Vehicle", Ownership: "Driver", Amount: "300" }, { No: "15", DescAr: "عدم حمل رخصة القيادة أو رخصة السير", DescEn: "Original Istimarah or Driving Licence is not available in the Vehicle", Ownership: "Driver", Amount: "300" }]; var o = { Vehicleid: "", VehicleName: "", VehicleNumber: "", VehicleVendor: "", Plant: "", Location: "", CostCenter: "", VehicleDetVisible: false, SumitRequestVisible: false, IdVehicleCheckList: true, idfileChkListBtn: true, idVehicleId: false, idDriverMobile: false, idAccept: false, idD2: true, idD3: true, idfileCheckList: true, idfileDL: true, idfileMOT: true, idFrontUpload: true, idLeftUpload: true, idRightUpload: true, idBackUpload: true, violationCollection: i }; this.oLocalModel = new sap.ui.model.json.JSONModel(o); t.setModel(this.oLocalModel, "localModel"); var a = { Response: [], Text: "", Type: "", Visible: false }; this.oLocalModel2 = new sap.ui.model.json.JSONModel(a); t.setModel(this.oLocalModel2, "localModel2") }, handleChangeLocal: function (e) { }, handleFile: function (e) { sap.m.MessageToast.show("File Size exceeds 1 MB Size, Please uploade below 1MB File") }, handleFile_2MB: function (e) { sap.m.MessageToast.show("File Size exceeds 2 MB Size, Please uploade below 2MB File") }, onDatePickerChange: function (e) { var t = e.getSource(); var i = t.getBinding("dateValue"); var o = t.getDateValue(); if (o) { var a = i.getContext().getPath() + "/" + i.getPath(); var s = sap.ui.core.format.DateFormat.getDateTimeInstance({ pattern: "yyyy-MM-ddTKK:mm:ss" }); i.getModel().setProperty(a, new Date(s.format(o))) } }, viewImage: function (e) { var t = e.getSource(); var i = t.getCustomData()[0].getValue(); if (!this.displayContent) { this.displayContent = sap.ui.xmlfragment("ZFLEET_DELIVERY_TRUCK_REQ.ZFLEET_DELIVERY_TRUCK_REQ.fragments.filepreview", this); this.getView().addDependent(this.displayContent) } sap.ui.getCore().byId("idPdfViewer").setVisible(false); sap.ui.getCore().byId("image").setVisible(true); sap.ui.getCore().byId("image").setSrc(i); this.displayContent.open() }, onEnterVechile: function (e) { var t = e.getSource().getValue().toString().toUpperCase(); var i = this; var o = function (e) { i.viewImage(e) }; var a = this.getView().getModel(); var s = "/VehicleDetails3Set('" + t + "')"; a.read(s, { success: function (e, t) { if (e !== null && (e.VehicleId !== null && e.VehicleId !== "")) { debugger; if (e.VehicleStatus === "E") { sap.m.MessageBox.alert(e.Message, { onClose: function (e) { } }); i.getView().getModel("localModel").setProperty("/VehicleDetVisible", false) } else { i.byId("idVechileName").setText(e.VehicleNo); i.oLocalModel.setProperty("/Vehicleid", e.VehicleId); i.oLocalModel.setProperty("/VehicleName", e.VehicleText); i.oLocalModel.setProperty("/VehicleVendor", e.VehicleVendor); i.oLocalModel.setProperty("/VehicleNumber", e.VehicleNo); i.oLocalModel.setProperty("/Plant", e.VehiclePlant); i.oLocalModel.setProperty("/Location", e.VehicleLoc); i.oLocalModel.setProperty("/CostCenter", e.VehicleCc); i.getView().getModel("localModel").setProperty("/idVehicleId", false); i.getView().getModel("localModel").setProperty("/idDriverMobile", true); i.getView().getModel("localModel").setProperty("/VehicleDetVisible", true); i.getView().getModel("localModel").setProperty("/idAccept", true); var a = i.getOwnerComponent().getModel(); var s = new sap.ui.model.Filter("FleetId", sap.ui.model.FilterOperator.EQ, VehicleId); a.read("/FleetReqDocumentsSet", { filters: [s], success: function (e, t) { debugger; var a = new sap.ui.model.json.JSONModel(e); i.getView().setModel(a, "imagesButton"); var s = i.getView().byId("idFleetImagesLeft"); var r = i.getView().byId("idFleetImagesRight"); var l = i.getView().byId("idFleetImagesFront"); var n = i.getView().byId("idFleetImagesBack"); var d = []; d = e.results; for (let e = 0; e < d.length; e++) { let t = d[e]; let i = ""; if (t.AwsFileName !== "") { i = t.Zdate.toLocaleDateString(); let e = new sap.m.Button({ id: t.AwsFileName, text: i, type: "Accept", press: o, customData: new sap.ui.core.CustomData({ key: "AwsFilePath", value: t.AwsFilePath }) }); if (t.DocType === "RIM") { r.addContent(e) } else if (t.DocType === "BIM") { n.addContent(e) } else if (t.DocType === "LIM") { s.addContent(e) } else if (t.DocType === "FIM") { l.addContent(e) } } } }, error: function () { sap.m.MessageToast.show("No Data retreived") } }) } } else { i.getView().getModel("localModel").setProperty("/VehicleDetVisible", false) } }, error: function () { i.oLocalModel.setProperty("/Vehicleid", ""); i.oLocalModel.setProperty("/VehicleName", ""); i.oLocalModel.setProperty("/VehicleVendor", ""); i.oLocalModel.setProperty("/VehicleNumber", ""); i.oLocalModel.setProperty("/Plant", ""); i.oLocalModel.setProperty("/Location", ""); i.getView().getModel("localModel").setProperty("/VehicleDetVisible", false); i.getView().getModel("localModel").setProperty("/SumitRequestVisible", false) } }) }, onSubmit: function (e) { debugger; var t = e.getSource().getValue(); var i = this; var o = "/EmployeeDetailsSet('" + t + "')"; var a = this.getView().getModel(); a.read(o, { success: function (e, s) { var r = new sap.ui.model.json.JSONModel(e); var l = i.getView().byId("IdEmpDetail"); l.setModel(r); o = "/VehicleDetailsSet('" + t + "')"; a.read(o, { success: function (e, t) { i.oLocalModel.setProperty("/Vehicleid", e.VehicleId); i.oLocalModel.setProperty("/VehicleName", e.VehicleText); i.oLocalModel.setProperty("/VehicleVendor", e.VehicleVendor); i.oLocalModel.setProperty("/VehicleNumber", e.VehicleNo); i.oLocalModel.setProperty("/Plant", e.VehiclePlant); i.oLocalModel.setProperty("/Location", e.VehicleLoc); i.oLocalModel.setProperty("/CostCenter", e.VehicleCc); i.getView().getModel("localModel").setProperty("/idVehicleId", true); i.getView().getModel("localModel").setProperty("/idDriverMobile", true); if (i.getView().getModel("localModel").getProperty("/Vehicleid") === "") { i.getView().getModel("localModel").setProperty("/VehicleDetVisible", false) } else { i.getView().getModel("localModel").setProperty("/VehicleDetVisible", true) } }, error: function () { i.oLocalModel.setProperty("/Vehicleid", ""); i.oLocalModel.setProperty("/VehicleName", ""); i.oLocalModel.setProperty("/VehicleVendor", ""); i.oLocalModel.setProperty("/VehicleNumber", ""); i.oLocalModel.setProperty("/Plant", ""); i.oLocalModel.setProperty("/Location", ""); i.getView().getModel("localModel").setProperty("/VehicleDetVisible", false) } }) }, error: function () { i.getView().getModel("localModel").setProperty("/SumitRequestVisible", false); sap.m.MessageToast.show("No Data retreived") } }) }, handleChangeLocalMOT: function (e) { MOTDate = this.getView().byId("idD3").getValue(); this.getView().byId("idD3").setValueState(sap.ui.core.ValueState.none) }, handleChangeLocalDL: function (e) { DLDate = this.getView().byId("idD2").getValue(); this.getView().byId("idD2").setValueState(sap.ui.core.ValueState.none) }, openIshtimarahFile: function (e) { var t = "ISH"; this.openDocument(e, t, true) }, openInsuranceFile: function (e) { var t = "INS"; this.openDocument(e, t, true) }, openMOTCard: function (e) { var t = "MOT"; this.openDocument(e, t, true) }, openMVPIDocument: function (e) { var t = "MVPI"; this.openDocument(e, t, true) }, openCheckFile: function (e) { var t = "CKL"; this.openDocument(e, t, false) }, openSASOCertificateFile: function (e) { var t = "SASO"; this.openDocument(e, t, true) }, openDLFile: function (e) { var t = "MOTD"; this.openDocument(e, t, false) }, openMOTCardDrvFile: function (e) { var t = "DL"; this.openDocument(e, t, false) }, openRightBtn: function (e) { var t = "RIM"; this.openDocument(e, t, true) }, openLeftBtn: function (e) { var t = "LIM"; this.openDocument(e, t, true) }, openFrontBtn: function (e) { var t = "FIM"; this.openDocument(e, t, true) }, openBackBtn: function (e) { var t = "BIM"; this.openDocument(e, t, true) }, openDocument: function (e, t, i) { var o = this.getView().byId("idPlateNo").getValue(); if (t !== "") { var a = this; var s = a.getOwnerComponent().getModel(); if (i === true) { var r = "/FleetDocumentsSet(Equnr=" + "'" + o + "'" + ",DocType=" + "'" + t + "'" + ",DocSeq='')" } else { var r = "/FleetReqDocumentsSet(RequestId=" + "'" + RequestId + "'" + ",DocType=" + "'" + t + "'" + ")" } s.read(r, { success: function (e, t) { var i = e.Content; var o = e.Filetype; var s = e.Filename; if (e.Content === "") { sap.m.MessageToast.show("No Data retreived"); return } i = "data:" + o + ";base64," + i; if (!a.displayContent) { a.displayContent = sap.ui.xmlfragment("ZFLEET_DELIVERY_TRUCK_REQ.ZFLEET_DELIVERY_TRUCK_REQ.fragments.filepreview", a); a.getView().addDependent(a.displayContent) } var r = o.split("/"); var l = r[0]; var o = s.split("."); var n = o[1]; switch (l) { case "image": sap.ui.getCore().byId("idPdfViewer").setVisible(false); sap.ui.getCore().byId("image").setVisible(true); sap.ui.getCore().byId("image").setSrc(i); break; default: sap.ui.getCore().byId("idPdfViewer").setVisible(true); sap.ui.getCore().byId("image").setVisible(false); var d = sap.ui.getCore().byId("idPdfViewer"); d.setContent('<iframe src="' + i + '" embedded="true" frameborder="0" target="_top" width="2000px" height="2000px"></iframe>'); break }if (n !== "docx" && n !== "pub" && n !== "xls" && n !== "ppt" && n !== "doc" && n !== "xlsx") { a.displayContent.open(); a.fragOpen = true } if (a.fragOpen === undefined) { window.open(i, "_self"); i = i.replace("data:APPLICATION/WWI;base64,", "") } }, error: function () { sap.m.MessageToast.show("No Data retreived") } }) } }, handleFile: function (e) { sap.m.MessageToast.show("File Size exceeds 5 MB Size, Please uploade below 5MB File") }, onPressBarPrintBtn: function (e) { }, onPressBarCloseBtn: function (e) { this.displayContent.close(); this.fragOpen = undefined }, onValueHelpSearchCust: function (e) { var t = e.getParameter("value"); var i = new d("VechileID", u.Contains, t); e.getSource().getBinding("items").filter([i]) }, onValueHelpRequestCust: function (e) { var t = e.getSource().getValue(), i = this.getView(); this.inputId1 = e.getSource().getId(); if (!this._valueHelpDialogCust) { this._valueHelpDialogCust = sap.ui.xmlfragment("ZFLEET_DELIVERY_TRUCK_REQ.ZFLEET_DELIVERY_TRUCK_REQ.fragments.ValueHelpDialog", this); this.getView().addDependent(this._valueHelpDialogCust) } this._valueHelpDialogCust.getBinding("items").filter([new d("VechileID", sap.ui.model.FilterOperator.Contains, t)]); this._valueHelpDialogCust.open(t) }, onValueHelpCloseCust: function (e) { var t = e.getParameter("selectedItem"); e.getSource().getBinding("items").filter([]); if (!t) { return } this.byId("idPlateNo").setValue(t.getTitle()); this.byId("idVechileName").setText(t.getDescription()); var i = t.getTitle(); if (i === "") { this.getView().byId("idPlateNo").setValueState(sap.ui.core.ValueState.Error) } else { this.getView().byId("idPlateNo").setValueState(sap.ui.core.ValueState.None) } }, onClose: function (e) { this._termsCondition.close() }, onTerms: function (e) { var t = this.byId("idAccept").getSelected(); var i = this.getView().byId("idPlateNo").getValue(); if (i !== "" && t === true) { this.getView().getModel("localModel").setProperty("/SumitRequestVisible", true); if (!this._termsCondition) { this._termsCondition = sap.ui.xmlfragment("ZFLEET_DELIVERY_TRUCK_REQ.ZFLEET_DELIVERY_TRUCK_REQ.fragments.TermsCondition", this); this.getView().addDependent(this._termsCondition) } this._termsCondition.open() } else { this.getView().getModel("localModel").setProperty("/SumitRequestVisible", false) } }, onUploadDocument: function (e, t, i, o) {
            var a = ""; a = this.getView().byId(t); var s = a.getFocusDomRef(); var r = s.files[0]; debugger; if (s.files.length !== 0) {
                var l = this; this.filenameLicense[i] = r.name; this.filetypeLicense[i] = r.type; this.getView().byId(t).setValueState(sap.ui.core.ValueState.None); var n = new FileReader; n.onload = function (e) {
                    var t = e.currentTarget.result.replace("data:" + l.filetypeLicense[i] + ";base64,", "");
                    //that.postToSap(this.getView().byId("idRequestId").getText(), that.filename, that.filetype, vContent, "SHOPLICENSE");
                    var a = l.getView().getModel(); var s = {}; if (o === true) { s = { Equnr: l.vechileId, DocType: i, Content: t, Filename: l.filenameLicense[i], Filetype: l.filetypeLicense[i] }; a.create("/FleetDocumentsSet", s, { success: function (e) { sap.m.MessageToast.show("Success") }, error: function (e) { sap.m.MessageToast.show("error") } }) } else { s = { RequestId: RequestId, DocType: i, Content: t, Filename: l.filenameLicense[i], Filetype: l.filetypeLicense[i] }; a.create("/FleetReqDocumentsSet", s, { success: function (e) { sap.m.MessageToast.show("Success") }, error: function (e) { sap.m.MessageToast.show("error") } }) }
                }; n.readAsDataURL(r)
            }
        }, onSubmitRequest: function (e) { var t = this.getView().byId("idVehicleId").getText(); var i = this.getView().byId("idPlateNo").getValue(); this.vechileId = i; var o = this.getView().byId("idDriverMobile").getValue(); var a = this.getView().byId("idDriverMobile"); if (o === "" || o.length < 9) { a.setValueState(s.Error); a.setValueStateText("Mobile No Is Required"); return } else { a.setValueState(s.None) } var r = this.getView().byId("idEmpid").getValue(); var n = this.getView().byId("idNameEn").getText(); var d = this.getView().byId("idNameAr").getText(); var c = this.getView().byId("idPositionCode").getText(); var u = this.getView().byId("idPositionEn").getText(); var g = this.getView().byId("idPositionAr").getText(); var p = this.getView().byId("idDepartmentEn").getText(); var h = this.getView().byId("idDepartmentAr").getText(); var V = this.getView().byId("idChannel").getText(); var D = this.getView().byId("idCocd").getText(); var m = this.getView().byId("idCompanyName").getText(); var f = this.getView().byId("idEmpPlant").getText(); var M = this.getView().byId("idEmpSubGroup").getText(); var v = this.getView().byId("idEmpSubGroupDesc").getText(); var y = this.getView().byId("idIquama").getText(); var w = this.getView().byId("idDl").getValue(); DLDate = new Date(this.getView().byId("idD2").getValue()); MOTDate = new Date(this.getView().byId("idD3").getValue()); var I = this.getView().byId("idEmpCostCenter").getText(); var b = this.getView().byId("idDl"); var P = this.getView().byId("idD2"); var L = this.getView().byId("idD3"); if (this.getView().byId("idD2").getValue() === "") { P.setValueState(s.Error); P.setValueStateText("Driving license Expiry Is Required"); return } else { P.setValueState(s.None) } if (this.getView().byId("idD3").getValue() === "") { P.setValueState(s.Error); P.setValueStateText("Drivings Card Is Required"); return } else { P.setValueState(s.None) } if (MOTDate === "") { L.setValueState(s.Error); L.setValueStateText("Driving license Is Required"); return } else { P.setValueState(s.None) } var C = this.getView().getModel(); var T = this; var E = ""; var S = { Pernr: r, NameEn: n, NameAr: d, PositionId: c, PositionTextEn: u, PositionTextAr: g, NatioEn: "", NatioAr: "", DepartmentEn: p, DepartmentAr: h, IdNoEn: y, IdNoAr: "", Cocd: D, CocdDesc: m, CostCenter: I, Dl: w, EmpSubgroup: M, EmpSubgroupDesc: v, Channel: V, Plant: f, DLExpDate: DLDate, MOTExpDate: MOTDate, VechileAssigned: i, MobileNo: o, RequestHeaderToItemNav: [{}] }; C.create("/FleetRequestHeaderSet", S, { success: function (t, i) { if (t.Requestduplicate === "X") { l.error("Duplicate Request being submitted.", {}); E = "X" } if (t.Requesterror === "X") { l.error("Error while submitting request. Please Try again.", {}); E = "X" } if (E !== "X") { T.oLocalModel2.setProperty("/Response", t); T.oLocalModel2.setProperty("/Type", "Success"); T.oLocalModel2.setProperty("/Visible", true); RequestId = T.oLocalModel2.getProperty("/Response/RequestId"); var o = "Delivery Truck Request :" + RequestId + " has been generated successfully"; T.oLocalModel2.setProperty("/Text", o); T.getView().getModel("localModel").setProperty("/SumitRequestVisible", false); T.getView().getModel("localModel").setProperty("/idAccept", false); T.getView().getModel("localModel").setProperty("/idD3", false); T.getView().getModel("localModel").setProperty("/idD2", false); T.getView().getModel("localModel").setProperty("/idfileCheckList", false); T.getView().getModel("localModel").setProperty("/idfileDL", false); T.getView().getModel("localModel").setProperty("/idfileMOT", false); T.getView().getModel("localModel").setProperty("/idFrontUpload", false); T.getView().getModel("localModel").setProperty("/idLeftUpload", false); T.getView().getModel("localModel").setProperty("/idRightUpload", false); T.getView().getModel("localModel").setProperty("/idBackUpload", false); T.onUploadDocument(e, "idfileCheckList", "CKL", false); T.onUploadDocument(e, "idfileDL", "DL", false); T.onUploadDocument(e, "idfileMOT", "MOTD", false); T.onUploadDocument(e, "idFrontUpload", "FIM", true); T.onUploadDocument(e, "idLeftUpload", "LIM", true); T.onUploadDocument(e, "idRightUpload", "RIM", true); T.onUploadDocument(e, "idBackUpload", "BIM", true) } }, error: function (e) { var t = jQuery.parseJSON(e.responseText).error.message.value; l.error(t, {}); return } }) }
    })
});